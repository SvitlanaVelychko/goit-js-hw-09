{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,SAE3CA,MA3CMO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAeF,EAAMG,cAAcC,SACzC,IAAId,EAAQe,SAASH,EAAaZ,MAAMgB,OACpCC,EAAOF,SAASH,EAAaK,KAAKD,OAClCE,EAASH,SAASH,EAAaM,OAAOF,OAE1ClB,EAAc,EAAGE,GACdmB,MAAKH,IACJI,EAAAxB,GAASyB,OAAOC,QAAQN,MAEzBO,OAAMC,IACLJ,EAAAxB,GAASyB,OAAOI,QAAQD,MAG5B,IAAK,IAAIE,EAAI,EAAGA,GAAKR,EAAQQ,GAAK,EAChC1B,GAASiB,EAETnB,EAAc4B,EAAG1B,GAChBmB,MAAKH,IACJI,EAAAxB,GAASyB,OAAOC,QAAQN,MAEzBO,OAAMC,IACLJ,EAAAxB,GAASyB,OAAOI,QAAQD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n    \n  const formElements = event.currentTarget.elements;\n  let delay = parseInt(formElements.delay.value);\n  let step = parseInt(formElements.step.value);\n  let amount = parseInt(formElements.amount.value);\n\n  createPromise(1, delay)\n    .then(value => {\n      Notiflix.Notify.success(value);\n    })\n    .catch(error => {\n      Notiflix.Notify.failure(error);\n    });\n  \n  for (let i = 2; i <= amount; i += 1) {\n    delay += step;\n    \n    createPromise(i, delay)\n    .then(value => {\n      Notiflix.Notify.success(value);\n    })\n    .catch(error => {\n      Notiflix.Notify.failure(error);\n    })\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  })\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","formElements","currentTarget","elements","parseInt","value","step","amount","then","$parcel$interopDefault","Notify","success","catch","error","failure","i"],"version":3,"file":"03-promises.35db7f4b.js.map"}